#!/bin/bash

# Script para executar testes das funcionalidades Bluetooth do IOTRAC
# Uso: ./run_bluetooth_tests.sh

echo "üöÄ EXECUTANDO TESTES BLUETOOTH - IOTRAC BACKEND"
echo "=================================================="

# Verificar se estamos no diret√≥rio correto
if [ ! -f "src/main.py" ]; then
    echo "‚ùå Erro: Execute este script a partir do diret√≥rio iotrac-backend/"
    exit 1
fi

# Verificar se Python est√° dispon√≠vel
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Erro: Python3 n√£o encontrado. Instale Python 3.8+ para continuar."
    exit 1
fi

# Verificar depend√™ncias
echo "üîç Verificando depend√™ncias..."

# Verificar se as depend√™ncias est√£o instaladas
python3 -c "import asyncio, sqlite3, json, os, sys, tempfile, logging, datetime, unittest.mock, typing" 2>/dev/null
if [ $? -ne 0 ]; then
    echo "‚ùå Erro: Depend√™ncias Python b√°sicas n√£o encontradas."
    exit 1
fi

# Verificar se bleak est√° instalado (opcional para simula√ß√£o)
python3 -c "import bleak" 2>/dev/null
if [ $? -eq 0 ]; then
    echo "‚úÖ Biblioteca bleak encontrada (modo real)"
    BLUETOOTH_MODE="real"
else
    echo "‚ö†Ô∏è Biblioteca bleak n√£o encontrada (modo simula√ß√£o)"
    echo "   Para instalar: pip install bleak>=0.20.0"
    BLUETOOTH_MODE="simulation"
fi

echo "‚úÖ Depend√™ncias verificadas"
echo ""

# Configurar vari√°veis de ambiente para teste
export PYTHONPATH="${PWD}/src:${PYTHONPATH}"
export AES_KEY="test_aes_key_32_bytes_long_12345678"
export HMAC_KEY="test_hmac_key_32_bytes_long_1234567"
export JWT_SECRET="test_jwt_secret_key"

# Verificar se o diret√≥rio src existe
if [ ! -d "src" ]; then
    echo "‚ùå Erro: Diret√≥rio src n√£o encontrado em $(pwd)"
    exit 1
fi

echo "‚úÖ PYTHONPATH configurado: $PYTHONPATH"

echo "üß™ Iniciando bateria de testes..."
echo "Modo: $BLUETOOTH_MODE"
echo ""

# Executar os testes
python3 tests/test_bluetooth_integration.py

# Capturar c√≥digo de sa√≠da
TEST_RESULT=$?

echo ""
echo "=================================================="

if [ $TEST_RESULT -eq 0 ]; then
    echo "üéâ TODOS OS TESTES PASSARAM COM SUCESSO!"
    echo "‚úÖ Implementa√ß√£o Bluetooth est√° funcionando corretamente"
    echo ""
    echo "üìã Pr√≥ximos passos:"
    echo "   1. Instalar depend√™ncias: pip install -r requirements.txt"
    echo "   2. Iniciar servidor: python src/main.py"
    echo "   3. Testar endpoints via frontend ou Postman"
else
    echo "‚ùå ALGUNS TESTES FALHARAM"
    echo "‚ö†Ô∏è Verifique os logs acima para detalhes"
    echo ""
    echo "üîß Poss√≠veis solu√ß√µes:"
    echo "   1. Verificar se todas as depend√™ncias est√£o instaladas"
    echo "   2. Verificar permiss√µes de escrita no diret√≥rio"
    echo "   3. Verificar se n√£o h√° conflitos de importa√ß√£o"
fi

echo "=================================================="

exit $TEST_RESULT 